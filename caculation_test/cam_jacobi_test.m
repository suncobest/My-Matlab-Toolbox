% Test of the Jacobians:
% camera initialization: with distortion
X = 10*randn(3,1); 
omega = randn(3,1);
Tc = [10*randn(2,1);100*rand(1)];  % the depth (Zc) of the origin of the world frame must be positive
fc = 1000*rand(2,1);
% fc = 1000*rand*ones(2,1);
cc = 1000*randn(2,1);
kc = 0.5*randn(5,1);
alpha_c = 0.01*randn;
[x,dxdom,dxdT,dxdf,dxdc,dxdk,dxdalpha] = project_points2(X,omega,Tc,fc,cc,kc,alpha_c);
% [x,dxdom,dxdT,dxdf,dxdc,dxdk,dxdalpha] = project_points2(X,omega,Tc,fc(1),cc,kc,alpha_c);


%%% parameters initialization
fc1=fc(1);
fc2=fc(2);
cc1=cc(1);
cc2=cc(2);
kc1=kc(1);
kc2=kc(2);
kc3=kc(3);
kc4=kc(4);
kc5=kc(5);

w1=omega(1);
w2=omega(2);
w3=omega(3);
theta=sqrt(w1^2+w2^2+w3^2);
st=sin(theta)/theta;
c1=1-cos(theta);
ct2=c1/theta^2;
w1w1=w1^2;
w2w2=w2^2;
w3w3=w3^2;
w1w2w3=w1*w2*w3;
stw1=st*w1;
stw2=st*w2;
stw3=st*w3;
ct2w1w2=ct2*w1*w2;
ct2w2w3=ct2*w2*w3;
ct2w1w3=ct2*w1*w3;
theta2=theta^2;
inv_theta2=1/theta2;
cs=cos(theta);

t1=Tc(1);
t2=Tc(2);
t3=Tc(3);

X1=X(1);
X2=X(2);
X3=X(3);
% xm1=xm(1);
% xm2=xm(2);

xd(1,1) = kc4*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (3*(t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2)/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2) + ((t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))*(kc1*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2) + kc2*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2)^2 + kc5*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2)^3 + 1))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1)) + (2*kc3*(t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))*(t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2)))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2;
xd(2,1) = kc3*((3*(t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2)/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2) + ((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))*(kc1*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2) + kc2*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2)^2 + kc5*((t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2 + (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))^2/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2)^3 + 1))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1)) + (2*kc4*(t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))*(t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2)))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1))^2;

xn(1,1) = (t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1));
xn(2,1) = (t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3))/(t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1));

Xc(1,1) = t1 - X1*(ct2*(w2w2 + w3w3) - 1) + X2*(ct2w1w2 - stw3) + X3*(ct2w1w3 + stw2);
Xc(2,1) = t2 - X2*(ct2*(w1w1 + w3w3) - 1) + X3*(ct2w2w3 - stw1) + X1*(ct2w1w2 + stw3);
Xc(3,1) = t3 - X3*(ct2*(w1w1 + w2w2) - 1) + X1*(ct2w1w3 - stw2) + X2*(ct2w2w3 + stw1);

Rc(1, 1) = 1 - ct2*(w2w2 + w3w3);
Rc(1, 2) = ct2w1w2 - stw3;
Rc(1, 3) = ct2w1w3 + stw2;
Rc(2, 1) = ct2w1w2 + stw3;
Rc(2, 2) = 1 - ct2*(w1w1 + w3w3);
Rc(2, 3) = ct2w2w3 - stw1;
Rc(3, 1) = ct2w1w3 - stw2;
Rc(3, 2) = ct2w2w3 + stw1;
Rc(3, 3) = 1 - ct2*(w1w1 + w2w2);

xd1=xd(1);
xd2=xd(2);
xn1=xn(1);
xn2=xn(2);
lxn2=xn1^2+xn2^2;
lxn4=lxn2^2;
lxn6=lxn2^3;
Xc1=Xc(1);
Xc2=Xc(2);
Xc3=Xc(3);
Rc11=Rc(1,1);
Rc21=Rc(2,1);
Rc31=Rc(3,1);
Rc12=Rc(1,2);
Rc22=Rc(2,2);
Rc32=Rc(3,2);
Rc13=Rc(1,3);
Rc23=Rc(2,3); 
Rc33=Rc(3,3);

%%% Jacobian formular

JA(1, 1) = - xd1 - alpha_c*xd2;
JA(1, 2) = 0;
JA(1, 3) = -1;
JA(1, 4) = 0;
JA(1, 5) = -fc1*xd2;
JA(1, 6) = -fc1*lxn2*(xn1 + alpha_c*xn2);
JA(1, 7) = -fc1*lxn4*(xn1 + alpha_c*xn2);
JA(1, 8) = - alpha_c*fc1*(lxn2 + 2*xn2^2) - 2*fc1*xn1*xn2;
JA(1, 9) = - fc1*(lxn2 + 2*xn1^2) - 2*alpha_c*fc1*xn1*xn2;
JA(1, 10) = -fc1*lxn6*(xn1 + alpha_c*xn2);
JA(2, 1) = 0;
JA(2, 2) = -xd2;
JA(2, 3) = 0;
JA(2, 4) = -1;
JA(2, 5) = 0;
JA(2, 6) = -fc2*lxn2*xn2;
JA(2, 7) = -fc2*lxn4*xn2;
JA(2, 8) = -fc2*(lxn2 + 2*xn2^2);
JA(2, 9) = -2*fc2*xn1*xn2;
JA(2, 10) = -fc2*lxn6*xn2;


JB(1, 1) = fc1*(kc4*((6*xn1^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 - (6*xn1*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (2*xn2^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 + (2*xn2*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3) - ((X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn1*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn1*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1^2 + X2*st*xn2^2 + X3*st*xn2 - X1*ct2*w2*xn2 + 2*X2*ct2*w1*xn2 - X2*ct2*w2*xn1 - X3*ct2*w3*xn1 + X1*ct2*w3*xn1^2 - 2*X3*ct2*w1*xn1^2 + X1*ct2*w3*xn2^2 - 2*X3*ct2*w1*xn2^2 + X3*cs*inv_theta2*w1w1*xn2 + 2*X3*ct2*inv_theta2*w1w2w3*xn2 + X1*inv_theta2*stw1*w3*xn2 - X2*inv_theta2*stw1*w3*xn1 + X3*inv_theta2*stw1*w2*xn1 - X3*inv_theta2*st*w1w1*xn2 - X3*inv_theta2*st*w1w2w3*xn2 - X1*inv_theta2*stw2*w1w1*xn2 + X2*inv_theta2*stw1*w1w1*xn2 - X2*inv_theta2*stw2*w1w1*xn1 - X3*inv_theta2*stw3*w1w1*xn1 + X1*inv_theta2*stw1*w2w2*xn1 + X1*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw1*w3w3*xn2 + X2*cs*inv_theta2*w1w1*xn1^2 + X2*cs*inv_theta2*w1w1*xn2^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn1^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn2^2 + X1*inv_theta2*stw1*w2*xn1^2 + X1*inv_theta2*stw1*w2*xn2^2 - X2*inv_theta2*st*w1w1*xn1^2 - X2*inv_theta2*st*w1w1*xn2^2 + X2*inv_theta2*st*w1w2w3*xn1^2 + X2*inv_theta2*st*w1w2w3*xn2^2 + X1*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw1*w1w1*xn1^2 + X1*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw1*w1w1*xn2^2 - X3*inv_theta2*stw1*w2w2*xn1^2 - X3*inv_theta2*stw1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w2*xn1^2 - X1*cs*inv_theta2*w1*w2*xn2^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn1^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w3*xn2 + X2*cs*inv_theta2*w1*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn1 + 2*X1*ct2*inv_theta2*w2*w1w1*xn2 - 2*X2*ct2*inv_theta2*w1*w1w1*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn1 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1 - 2*X1*ct2*inv_theta2*w1*w2w2*xn1 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w1*w3w3*xn2))/Xc3 + (2*kc3*xn1*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3 - (2*kc3*xn2*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (4*kc3*xn1*xn2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3) + alpha_c*fc1*(kc3*((2*xn1^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 - (2*xn1*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (6*xn2^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 + (6*xn2*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3) + ((X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1^2 + X2*st*xn2^2 + X3*st*xn2 - X1*ct2*w2*xn2 + 2*X2*ct2*w1*xn2 - X2*ct2*w2*xn1 - X3*ct2*w3*xn1 + X1*ct2*w3*xn1^2 - 2*X3*ct2*w1*xn1^2 + X1*ct2*w3*xn2^2 - 2*X3*ct2*w1*xn2^2 + X3*cs*inv_theta2*w1w1*xn2 + 2*X3*ct2*inv_theta2*w1w2w3*xn2 + X1*inv_theta2*stw1*w3*xn2 - X2*inv_theta2*stw1*w3*xn1 + X3*inv_theta2*stw1*w2*xn1 - X3*inv_theta2*st*w1w1*xn2 - X3*inv_theta2*st*w1w2w3*xn2 - X1*inv_theta2*stw2*w1w1*xn2 + X2*inv_theta2*stw1*w1w1*xn2 - X2*inv_theta2*stw2*w1w1*xn1 - X3*inv_theta2*stw3*w1w1*xn1 + X1*inv_theta2*stw1*w2w2*xn1 + X1*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw1*w3w3*xn2 + X2*cs*inv_theta2*w1w1*xn1^2 + X2*cs*inv_theta2*w1w1*xn2^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn1^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn2^2 + X1*inv_theta2*stw1*w2*xn1^2 + X1*inv_theta2*stw1*w2*xn2^2 - X2*inv_theta2*st*w1w1*xn1^2 - X2*inv_theta2*st*w1w1*xn2^2 + X2*inv_theta2*st*w1w2w3*xn1^2 + X2*inv_theta2*st*w1w2w3*xn2^2 + X1*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw1*w1w1*xn1^2 + X1*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw1*w1w1*xn2^2 - X3*inv_theta2*stw1*w2w2*xn1^2 - X3*inv_theta2*stw1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w2*xn1^2 - X1*cs*inv_theta2*w1*w2*xn2^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn1^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w3*xn2 + X2*cs*inv_theta2*w1*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn1 + 2*X1*ct2*inv_theta2*w2*w1w1*xn2 - 2*X2*ct2*inv_theta2*w1*w1w1*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn1 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1 - 2*X1*ct2*inv_theta2*w1*w2w2*xn1 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w1*w3w3*xn2))/Xc3 + (2*kc4*xn1*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3 - (2*kc4*xn2*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (4*kc4*xn1*xn2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3);
JB(1, 2) = - fc1*(kc4*((2*xn2*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (6*xn1^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (2*xn2^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (6*xn1*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3) + ((X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn1*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn1*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X1*st*xn1^2 + X1*st*xn2^2 + X3*st*xn1 + X1*ct2*w1*xn2 - 2*X1*ct2*w2*xn1 + X2*ct2*w1*xn1 + X3*ct2*w3*xn2 - X2*ct2*w3*xn1^2 + 2*X3*ct2*w2*xn1^2 - X2*ct2*w3*xn2^2 + 2*X3*ct2*w2*xn2^2 + X3*cs*inv_theta2*w2w2*xn1 - 2*X3*ct2*inv_theta2*w1w2w3*xn1 - X1*inv_theta2*stw2*w3*xn2 + X2*inv_theta2*stw2*w3*xn1 + X3*inv_theta2*stw1*w2*xn2 - X3*inv_theta2*st*w2w2*xn1 + X3*inv_theta2*st*w1w2w3*xn1 - X2*inv_theta2*stw2*w1w1*xn2 + X1*inv_theta2*stw1*w2w2*xn2 - X1*inv_theta2*stw2*w2w2*xn1 + X2*inv_theta2*stw1*w2w2*xn1 + X3*inv_theta2*stw3*w2w2*xn2 - X1*inv_theta2*stw2*w3w3*xn1 - X2*inv_theta2*stw2*w3w3*xn2 + X1*cs*inv_theta2*w2w2*xn1^2 + X1*cs*inv_theta2*w2w2*xn2^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn1^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn2^2 + X2*inv_theta2*stw1*w2*xn1^2 + X2*inv_theta2*stw1*w2*xn2^2 - X1*inv_theta2*st*w2w2*xn1^2 - X1*inv_theta2*st*w2w2*xn2^2 - X1*inv_theta2*st*w1w2w3*xn1^2 - X1*inv_theta2*st*w1w2w3*xn2^2 + X3*inv_theta2*stw2*w1w1*xn1^2 + X3*inv_theta2*stw2*w1w1*xn2^2 - X2*inv_theta2*stw3*w2w2*xn1^2 + X3*inv_theta2*stw2*w2w2*xn1^2 - X2*inv_theta2*stw3*w2w2*xn2^2 + X3*inv_theta2*stw2*w2w2*xn2^2 - X2*cs*inv_theta2*w1*w2*xn1^2 - X2*cs*inv_theta2*w1*w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn1^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn2^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn1^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn1^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn2^2 + X1*cs*inv_theta2*w2*w3*xn2 - X2*cs*inv_theta2*w2*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn2 - 2*X1*ct2*inv_theta2*w1*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w2w2*xn1 - 2*X2*ct2*inv_theta2*w1*w2w2*xn1 - 2*X3*ct2*inv_theta2*w3*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w3w3*xn1 + 2*X2*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (2*kc3*xn2*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3 + (2*kc3*xn1*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (4*kc3*xn1*xn2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3) - alpha_c*fc1*(kc3*((6*xn2*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (2*xn1^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (6*xn2^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (2*xn1*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3) + ((X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X1*st*xn1^2 + X1*st*xn2^2 + X3*st*xn1 + X1*ct2*w1*xn2 - 2*X1*ct2*w2*xn1 + X2*ct2*w1*xn1 + X3*ct2*w3*xn2 - X2*ct2*w3*xn1^2 + 2*X3*ct2*w2*xn1^2 - X2*ct2*w3*xn2^2 + 2*X3*ct2*w2*xn2^2 + X3*cs*inv_theta2*w2w2*xn1 - 2*X3*ct2*inv_theta2*w1w2w3*xn1 - X1*inv_theta2*stw2*w3*xn2 + X2*inv_theta2*stw2*w3*xn1 + X3*inv_theta2*stw1*w2*xn2 - X3*inv_theta2*st*w2w2*xn1 + X3*inv_theta2*st*w1w2w3*xn1 - X2*inv_theta2*stw2*w1w1*xn2 + X1*inv_theta2*stw1*w2w2*xn2 - X1*inv_theta2*stw2*w2w2*xn1 + X2*inv_theta2*stw1*w2w2*xn1 + X3*inv_theta2*stw3*w2w2*xn2 - X1*inv_theta2*stw2*w3w3*xn1 - X2*inv_theta2*stw2*w3w3*xn2 + X1*cs*inv_theta2*w2w2*xn1^2 + X1*cs*inv_theta2*w2w2*xn2^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn1^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn2^2 + X2*inv_theta2*stw1*w2*xn1^2 + X2*inv_theta2*stw1*w2*xn2^2 - X1*inv_theta2*st*w2w2*xn1^2 - X1*inv_theta2*st*w2w2*xn2^2 - X1*inv_theta2*st*w1w2w3*xn1^2 - X1*inv_theta2*st*w1w2w3*xn2^2 + X3*inv_theta2*stw2*w1w1*xn1^2 + X3*inv_theta2*stw2*w1w1*xn2^2 - X2*inv_theta2*stw3*w2w2*xn1^2 + X3*inv_theta2*stw2*w2w2*xn1^2 - X2*inv_theta2*stw3*w2w2*xn2^2 + X3*inv_theta2*stw2*w2w2*xn2^2 - X2*cs*inv_theta2*w1*w2*xn1^2 - X2*cs*inv_theta2*w1*w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn1^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn2^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn1^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn1^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn2^2 + X1*cs*inv_theta2*w2*w3*xn2 - X2*cs*inv_theta2*w2*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn2 - 2*X1*ct2*inv_theta2*w1*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w2w2*xn1 - 2*X2*ct2*inv_theta2*w1*w2w2*xn1 - 2*X3*ct2*inv_theta2*w3*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w3w3*xn1 + 2*X2*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (2*kc4*xn2*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3 + (2*kc4*xn1*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (4*kc4*xn1*xn2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3);
JB(1, 3) = fc1*(kc4*((6*xn1^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 + (2*xn2^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 - (2*xn2*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (6*xn1*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3) + ((X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn1*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 - (2*kc3*xn1*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*kc3*xn2*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*xn1*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1 - X1*st*xn2 + 2*X1*ct2*w3*xn1 - X3*ct2*w1*xn1 + 2*X2*ct2*w3*xn2 - X3*ct2*w2*xn2 + X1*ct2*w1*xn1^2 + X1*ct2*w1*xn2^2 + X2*ct2*w2*xn1^2 + X2*ct2*w2*xn2^2 - X1*cs*inv_theta2*w3w3*xn2 + X2*cs*inv_theta2*w3w3*xn1 + 2*X1*ct2*inv_theta2*w1w2w3*xn2 + 2*X2*ct2*inv_theta2*w1w2w3*xn1 - X3*inv_theta2*stw1*w3*xn2 + X3*inv_theta2*stw2*w3*xn1 + X1*inv_theta2*st*w3w3*xn2 - X2*inv_theta2*st*w3w3*xn1 - X1*inv_theta2*st*w1w2w3*xn2 - X2*inv_theta2*st*w1w2w3*xn1 + X2*inv_theta2*stw3*w1w1*xn2 + X1*inv_theta2*stw3*w2w2*xn1 + X1*inv_theta2*stw3*w3w3*xn1 - X3*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw3*w3w3*xn2 - X3*inv_theta2*stw2*w3w3*xn2 + X1*inv_theta2*stw2*w3*xn1^2 - X2*inv_theta2*stw1*w3*xn1^2 + X1*inv_theta2*stw2*w3*xn2^2 - X2*inv_theta2*stw1*w3*xn2^2 - X3*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw3*w2w2*xn1^2 - X3*inv_theta2*stw3*w2w2*xn2^2 + X1*inv_theta2*stw1*w3w3*xn1^2 + X1*inv_theta2*stw1*w3w3*xn2^2 + X2*inv_theta2*stw2*w3w3*xn1^2 + X2*inv_theta2*stw2*w3w3*xn2^2 - X1*cs*inv_theta2*w2*w3*xn1^2 + X2*cs*inv_theta2*w1*w3*xn1^2 - X1*cs*inv_theta2*w2*w3*xn2^2 + X2*cs*inv_theta2*w1*w3*xn2^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn2^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn1^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn2^2 + X3*cs*inv_theta2*w1*w3*xn2 - X3*cs*inv_theta2*w2*w3*xn1 - 2*X2*ct2*inv_theta2*w3*w1w1*xn2 - 2*X1*ct2*inv_theta2*w3*w2w2*xn1 - 2*X1*ct2*inv_theta2*w3*w3w3*xn1 + 2*X3*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w3*w3w3*xn2 + 2*X3*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (4*kc3*xn1*xn2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3) + alpha_c*fc1*(kc3*((2*xn1^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 + (6*xn2^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 - (6*xn2*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*xn1*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3) - ((X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 - (2*kc4*xn1*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*kc4*xn2*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1 - X1*st*xn2 + 2*X1*ct2*w3*xn1 - X3*ct2*w1*xn1 + 2*X2*ct2*w3*xn2 - X3*ct2*w2*xn2 + X1*ct2*w1*xn1^2 + X1*ct2*w1*xn2^2 + X2*ct2*w2*xn1^2 + X2*ct2*w2*xn2^2 - X1*cs*inv_theta2*w3w3*xn2 + X2*cs*inv_theta2*w3w3*xn1 + 2*X1*ct2*inv_theta2*w1w2w3*xn2 + 2*X2*ct2*inv_theta2*w1w2w3*xn1 - X3*inv_theta2*stw1*w3*xn2 + X3*inv_theta2*stw2*w3*xn1 + X1*inv_theta2*st*w3w3*xn2 - X2*inv_theta2*st*w3w3*xn1 - X1*inv_theta2*st*w1w2w3*xn2 - X2*inv_theta2*st*w1w2w3*xn1 + X2*inv_theta2*stw3*w1w1*xn2 + X1*inv_theta2*stw3*w2w2*xn1 + X1*inv_theta2*stw3*w3w3*xn1 - X3*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw3*w3w3*xn2 - X3*inv_theta2*stw2*w3w3*xn2 + X1*inv_theta2*stw2*w3*xn1^2 - X2*inv_theta2*stw1*w3*xn1^2 + X1*inv_theta2*stw2*w3*xn2^2 - X2*inv_theta2*stw1*w3*xn2^2 - X3*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw3*w2w2*xn1^2 - X3*inv_theta2*stw3*w2w2*xn2^2 + X1*inv_theta2*stw1*w3w3*xn1^2 + X1*inv_theta2*stw1*w3w3*xn2^2 + X2*inv_theta2*stw2*w3w3*xn1^2 + X2*inv_theta2*stw2*w3w3*xn2^2 - X1*cs*inv_theta2*w2*w3*xn1^2 + X2*cs*inv_theta2*w1*w3*xn1^2 - X1*cs*inv_theta2*w2*w3*xn2^2 + X2*cs*inv_theta2*w1*w3*xn2^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn2^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn1^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn2^2 + X3*cs*inv_theta2*w1*w3*xn2 - X3*cs*inv_theta2*w2*w3*xn1 - 2*X2*ct2*inv_theta2*w3*w1w1*xn2 - 2*X1*ct2*inv_theta2*w3*w2w2*xn1 - 2*X1*ct2*inv_theta2*w3*w3w3*xn1 + 2*X3*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w3*w3w3*xn2 + 2*X3*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (4*kc4*xn1*xn2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3);
JB(1, 4) = -(fc1*(Xc3 + 6*Xc1*kc4 + 2*Xc1*alpha_c*kc3 + Xc3*kc1*lxn2 + Xc3*kc2*lxn4 + Xc3*kc5*lxn6 + 2*Xc1*kc1*xn1 + 2*Xc3*kc3*xn2 + 4*Xc1*kc2*lxn2*xn1 + 6*Xc1*kc5*lxn4*xn1 + 2*Xc1*alpha_c*kc1*xn2 + 2*Xc3*alpha_c*kc4*xn2 + 4*Xc1*alpha_c*kc2*lxn2*xn2 + 6*Xc1*alpha_c*kc5*lxn4*xn2))/Xc3^2;
JB(1, 5) = -(fc1*(Xc3*alpha_c + 2*Xc2*kc4 + 6*Xc2*alpha_c*kc3 + 2*Xc2*kc1*xn1 + 2*Xc3*kc3*xn1 + 4*Xc2*kc2*lxn2*xn1 + 6*Xc2*kc5*lxn4*xn1 + Xc3*alpha_c*kc1*lxn2 + Xc3*alpha_c*kc2*lxn4 + Xc3*alpha_c*kc5*lxn6 + 2*Xc2*alpha_c*kc1*xn2 + 2*Xc3*alpha_c*kc4*xn1 + 4*Xc2*alpha_c*kc2*lxn2*xn2 + 6*Xc2*alpha_c*kc5*lxn4*xn2))/Xc3^2;
JB(1, 6) = fc1*(kc4*((6*xn1^2)/Xc3 + (2*xn2^2)/Xc3) + xn1*(kc1*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3) + 2*kc2*lxn2*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3) + 3*kc5*lxn4*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3)) + (xn1*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (4*kc3*xn1*xn2)/Xc3) + alpha_c*fc1*(kc3*((2*xn1^2)/Xc3 + (6*xn2^2)/Xc3) + xn2*(kc1*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3) + 2*kc2*lxn2*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3) + 3*kc5*lxn4*((2*xn1^2)/Xc3 + (2*xn2^2)/Xc3)) + (xn2*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (4*kc4*xn1*xn2)/Xc3);
JB(2, 1) = fc2*(kc3*((2*xn1^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 - (2*xn1*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (6*xn2^2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3 + (6*xn2*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3) + ((X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1^2 + X2*st*xn2^2 + X3*st*xn2 - X1*ct2*w2*xn2 + 2*X2*ct2*w1*xn2 - X2*ct2*w2*xn1 - X3*ct2*w3*xn1 + X1*ct2*w3*xn1^2 - 2*X3*ct2*w1*xn1^2 + X1*ct2*w3*xn2^2 - 2*X3*ct2*w1*xn2^2 + X3*cs*inv_theta2*w1w1*xn2 + 2*X3*ct2*inv_theta2*w1w2w3*xn2 + X1*inv_theta2*stw1*w3*xn2 - X2*inv_theta2*stw1*w3*xn1 + X3*inv_theta2*stw1*w2*xn1 - X3*inv_theta2*st*w1w1*xn2 - X3*inv_theta2*st*w1w2w3*xn2 - X1*inv_theta2*stw2*w1w1*xn2 + X2*inv_theta2*stw1*w1w1*xn2 - X2*inv_theta2*stw2*w1w1*xn1 - X3*inv_theta2*stw3*w1w1*xn1 + X1*inv_theta2*stw1*w2w2*xn1 + X1*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw1*w3w3*xn2 + X2*cs*inv_theta2*w1w1*xn1^2 + X2*cs*inv_theta2*w1w1*xn2^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn1^2 - 2*X2*ct2*inv_theta2*w1w2w3*xn2^2 + X1*inv_theta2*stw1*w2*xn1^2 + X1*inv_theta2*stw1*w2*xn2^2 - X2*inv_theta2*st*w1w1*xn1^2 - X2*inv_theta2*st*w1w1*xn2^2 + X2*inv_theta2*st*w1w2w3*xn1^2 + X2*inv_theta2*st*w1w2w3*xn2^2 + X1*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw1*w1w1*xn1^2 + X1*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw1*w1w1*xn2^2 - X3*inv_theta2*stw1*w2w2*xn1^2 - X3*inv_theta2*stw1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w2*xn1^2 - X1*cs*inv_theta2*w1*w2*xn2^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn1^2 - 2*X1*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w1*w2w2*xn2^2 - X1*cs*inv_theta2*w1*w3*xn2 + X2*cs*inv_theta2*w1*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn1 + 2*X1*ct2*inv_theta2*w2*w1w1*xn2 - 2*X2*ct2*inv_theta2*w1*w1w1*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn1 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1 - 2*X1*ct2*inv_theta2*w1*w2w2*xn1 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w1*w3w3*xn2))/Xc3 + (2*kc4*xn1*(X3*(st + cs*inv_theta2*w1w1 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 - inv_theta2*st*w1w2w3) - X1*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X2*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w3w3 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w3w3)))/Xc3 - (2*kc4*xn2*(X2*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w1w1 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w1w1) + X3*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X1*inv_theta2*(stw1 - 2*ct2*w1)*(w2w2 + w3w3)))/Xc3 + (4*kc4*xn1*xn2*(X2*(st + cs*inv_theta2*w1w1 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w1w1 + inv_theta2*st*w1w2w3) + X1*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w1w1 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w1w1) - X3*(2*ct2*w1 + inv_theta2*stw1*w1w1 + inv_theta2*stw1*w2w2 - 2*ct2*inv_theta2*w1*w1w1 - 2*ct2*inv_theta2*w1*w2w2)))/Xc3);
JB(2, 2) = -fc2*(kc3*((6*xn2*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (2*xn1^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (6*xn2^2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3 + (2*xn1*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3) + ((X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X1*st*xn1^2 + X1*st*xn2^2 + X3*st*xn1 + X1*ct2*w1*xn2 - 2*X1*ct2*w2*xn1 + X2*ct2*w1*xn1 + X3*ct2*w3*xn2 - X2*ct2*w3*xn1^2 + 2*X3*ct2*w2*xn1^2 - X2*ct2*w3*xn2^2 + 2*X3*ct2*w2*xn2^2 + X3*cs*inv_theta2*w2w2*xn1 - 2*X3*ct2*inv_theta2*w1w2w3*xn1 - X1*inv_theta2*stw2*w3*xn2 + X2*inv_theta2*stw2*w3*xn1 + X3*inv_theta2*stw1*w2*xn2 - X3*inv_theta2*st*w2w2*xn1 + X3*inv_theta2*st*w1w2w3*xn1 - X2*inv_theta2*stw2*w1w1*xn2 + X1*inv_theta2*stw1*w2w2*xn2 - X1*inv_theta2*stw2*w2w2*xn1 + X2*inv_theta2*stw1*w2w2*xn1 + X3*inv_theta2*stw3*w2w2*xn2 - X1*inv_theta2*stw2*w3w3*xn1 - X2*inv_theta2*stw2*w3w3*xn2 + X1*cs*inv_theta2*w2w2*xn1^2 + X1*cs*inv_theta2*w2w2*xn2^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn1^2 + 2*X1*ct2*inv_theta2*w1w2w3*xn2^2 + X2*inv_theta2*stw1*w2*xn1^2 + X2*inv_theta2*stw1*w2*xn2^2 - X1*inv_theta2*st*w2w2*xn1^2 - X1*inv_theta2*st*w2w2*xn2^2 - X1*inv_theta2*st*w1w2w3*xn1^2 - X1*inv_theta2*st*w1w2w3*xn2^2 + X3*inv_theta2*stw2*w1w1*xn1^2 + X3*inv_theta2*stw2*w1w1*xn2^2 - X2*inv_theta2*stw3*w2w2*xn1^2 + X3*inv_theta2*stw2*w2w2*xn1^2 - X2*inv_theta2*stw3*w2w2*xn2^2 + X3*inv_theta2*stw2*w2w2*xn2^2 - X2*cs*inv_theta2*w1*w2*xn1^2 - X2*cs*inv_theta2*w1*w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn1^2 - 2*X3*ct2*inv_theta2*w2*w1w1*xn2^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn1^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn1^2 + 2*X2*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X3*ct2*inv_theta2*w2*w2w2*xn2^2 + X1*cs*inv_theta2*w2*w3*xn2 - X2*cs*inv_theta2*w2*w3*xn1 - X3*cs*inv_theta2*w1*w2*xn2 + 2*X2*ct2*inv_theta2*w2*w1w1*xn2 - 2*X1*ct2*inv_theta2*w1*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w2w2*xn1 - 2*X2*ct2*inv_theta2*w1*w2w2*xn1 - 2*X3*ct2*inv_theta2*w3*w2w2*xn2 + 2*X1*ct2*inv_theta2*w2*w3w3*xn1 + 2*X2*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (2*kc4*xn2*(X3*(st + cs*inv_theta2*w2w2 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 + inv_theta2*st*w1w2w3) + X2*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) - X1*(2*ct2*w2 + inv_theta2*stw2*w2w2 + inv_theta2*stw2*w3w3 - 2*ct2*inv_theta2*w2*w2w2 - 2*ct2*inv_theta2*w2*w3w3)))/Xc3 + (2*kc4*xn1*(X1*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w2w2 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w2w2) + X3*(ct2*w3 + inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 - cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) - X2*inv_theta2*(stw2 - 2*ct2*w2)*(w1w1 + w3w3)))/Xc3 + (4*kc4*xn1*xn2*(X1*(st + cs*inv_theta2*w2w2 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w2w2 - inv_theta2*st*w1w2w3) - X2*(ct2*w3 - inv_theta2*stw1*w2 + inv_theta2*stw3*w2w2 + cs*inv_theta2*w1*w2 - 2*ct2*inv_theta2*w3*w2w2) + X3*(2*ct2*w2 + inv_theta2*stw2*w1w1 + inv_theta2*stw2*w2w2 - 2*ct2*inv_theta2*w2*w1w1 - 2*ct2*inv_theta2*w2*w2w2)))/Xc3);
JB(2, 3) = fc2*(kc3*((2*xn1^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 + (6*xn2^2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3 - (6*xn2*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*xn1*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3) - ((X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 + (xn2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2))*(kc1*lxn2 + kc2*lxn4 + kc5*lxn6 + 1))/Xc3 - (2*kc4*xn1*(X1*(st + cs*inv_theta2*w3w3 - 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 + inv_theta2*st*w1w2w3) + X3*(ct2*w2 + inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 - cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X2*(2*ct2*w3 + inv_theta2*stw3*w1w1 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w1w1 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*kc4*xn2*(X2*(st + cs*inv_theta2*w3w3 + 2*ct2*inv_theta2*w1w2w3 - inv_theta2*st*w3w3 - inv_theta2*st*w1w2w3) - X3*(ct2*w1 - inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 + cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X1*(2*ct2*w3 + inv_theta2*stw3*w2w2 + inv_theta2*stw3*w3w3 - 2*ct2*inv_theta2*w3*w2w2 - 2*ct2*inv_theta2*w3*w3w3)))/Xc3 + (2*xn2*(kc1 + 2*kc2*lxn2 + 3*kc5*lxn4)*(X2*st*xn1 - X1*st*xn2 + 2*X1*ct2*w3*xn1 - X3*ct2*w1*xn1 + 2*X2*ct2*w3*xn2 - X3*ct2*w2*xn2 + X1*ct2*w1*xn1^2 + X1*ct2*w1*xn2^2 + X2*ct2*w2*xn1^2 + X2*ct2*w2*xn2^2 - X1*cs*inv_theta2*w3w3*xn2 + X2*cs*inv_theta2*w3w3*xn1 + 2*X1*ct2*inv_theta2*w1w2w3*xn2 + 2*X2*ct2*inv_theta2*w1w2w3*xn1 - X3*inv_theta2*stw1*w3*xn2 + X3*inv_theta2*stw2*w3*xn1 + X1*inv_theta2*st*w3w3*xn2 - X2*inv_theta2*st*w3w3*xn1 - X1*inv_theta2*st*w1w2w3*xn2 - X2*inv_theta2*st*w1w2w3*xn1 + X2*inv_theta2*stw3*w1w1*xn2 + X1*inv_theta2*stw3*w2w2*xn1 + X1*inv_theta2*stw3*w3w3*xn1 - X3*inv_theta2*stw1*w3w3*xn1 + X2*inv_theta2*stw3*w3w3*xn2 - X3*inv_theta2*stw2*w3w3*xn2 + X1*inv_theta2*stw2*w3*xn1^2 - X2*inv_theta2*stw1*w3*xn1^2 + X1*inv_theta2*stw2*w3*xn2^2 - X2*inv_theta2*stw1*w3*xn2^2 - X3*inv_theta2*stw3*w1w1*xn1^2 - X3*inv_theta2*stw3*w1w1*xn2^2 - X3*inv_theta2*stw3*w2w2*xn1^2 - X3*inv_theta2*stw3*w2w2*xn2^2 + X1*inv_theta2*stw1*w3w3*xn1^2 + X1*inv_theta2*stw1*w3w3*xn2^2 + X2*inv_theta2*stw2*w3w3*xn1^2 + X2*inv_theta2*stw2*w3w3*xn2^2 - X1*cs*inv_theta2*w2*w3*xn1^2 + X2*cs*inv_theta2*w1*w3*xn1^2 - X1*cs*inv_theta2*w2*w3*xn2^2 + X2*cs*inv_theta2*w1*w3*xn2^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn1^2 + 2*X3*ct2*inv_theta2*w3*w1w1*xn2^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn1^2 + 2*X3*ct2*inv_theta2*w3*w2w2*xn2^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn1^2 - 2*X1*ct2*inv_theta2*w1*w3w3*xn2^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn1^2 - 2*X2*ct2*inv_theta2*w2*w3w3*xn2^2 + X3*cs*inv_theta2*w1*w3*xn2 - X3*cs*inv_theta2*w2*w3*xn1 - 2*X2*ct2*inv_theta2*w3*w1w1*xn2 - 2*X1*ct2*inv_theta2*w3*w2w2*xn1 - 2*X1*ct2*inv_theta2*w3*w3w3*xn1 + 2*X3*ct2*inv_theta2*w1*w3w3*xn1 - 2*X2*ct2*inv_theta2*w3*w3w3*xn2 + 2*X3*ct2*inv_theta2*w2*w3w3*xn2))/Xc3 + (4*kc4*xn1*xn2*(X1*(ct2*w1 + inv_theta2*stw2*w3 + inv_theta2*stw1*w3w3 - cs*inv_theta2*w2*w3 - 2*ct2*inv_theta2*w1*w3w3) + X2*(ct2*w2 - inv_theta2*stw1*w3 + inv_theta2*stw2*w3w3 + cs*inv_theta2*w1*w3 - 2*ct2*inv_theta2*w2*w3w3) - X3*inv_theta2*(stw3 - 2*ct2*w3)*(w1w1 + w2w2)))/Xc3);
JB(2, 4) = -(2*fc2*(Xc1*kc3 + Xc1*kc1*xn2 + Xc3*kc4*xn2 + 2*Xc1*kc2*lxn2*xn2 + 3*Xc1*kc5*lxn4*xn2))/Xc3^2;
JB(2, 5) = -(fc2*(Xc3 + 6*Xc2*kc3 + Xc3*kc1*lxn2 + Xc3*kc2*lxn4 + Xc3*kc5*lxn6 + 2*Xc2*kc1*xn2 + 2*Xc3*kc4*xn1 + 4*Xc2*kc2*lxn2*xn2 + 6*Xc2*kc5*lxn4*xn2))/Xc3^2;
JB(2, 6) = (fc2*(xn2 + 2*kc1*xn2^3 + 2*kc3*xn1^2 + 6*kc3*xn2^2 + 4*kc2*lxn2*xn2^3 + 6*kc5*lxn4*xn2^3 + 2*kc1*xn1^2*xn2 + kc1*lxn2*xn2 + kc2*lxn4*xn2 + kc5*lxn6*xn2 + 4*kc4*xn1*xn2 + 4*kc2*lxn2*xn1^2*xn2 + 6*kc5*lxn4*xn1^2*xn2))/Xc3;



A=[dxdf,dxdc,dxdalpha,dxdk]
JA
B=[dxdom,dxdT]
JB
